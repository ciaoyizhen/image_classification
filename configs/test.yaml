name: "weather_predict" # task name, used to process title and save dir name
label_config: "configs/label_config.txt"

is_dataset_cached: false
dataset_cache_dir: ""  # datasets module save cache path, if is_dataset_cache is false, it does not take effect

model:
  type: transformers,AutoModelForImageClassification
  args:
    pretrained_model_name_or_path: "weights/swinv2-tiny-patch4-window8-256"  # used model
processor:
  type: transformers,AutoImageProcessor
  args:
    pretrained_model_name_or_path: "weights/swinv2-tiny-patch4-window8-256" # used model

train_args:
  #! Optional: transformers.TrainingArguments
  output_dir: null # if not set, will using outputs/`name`
  eval_strategy: "epoch"
  per_device_train_batch_size: 8
  per_device_eval_batch_size: 16
  save_strategy: "epoch"
  logging_steps: 10
  num_train_epochs: 1
  logging_first_step: true
  remove_unused_columns: false  #! importance! This is must be false. Because our data will be load when training. If we remove unused_columns, we will not any data
evaluate_metric:
  #! Optional: `evaluate package` could load.  some metric need special process.
  - "accuracy"
  - "recall"
  - "precision"
  - "f1"

train_dataset:  # train_dataset configure
  type:  src.dataset,Dataset # used class name, format `{module_name},{class_name}`
  args:  # class args
    data_paths:
      - configs/train_data.txt  # data_path  Currently only .txt format is implemented `{img_path}\t{label}`


validation_dataset:
  type: src.dataset,Dataset
  args:
    data_paths:
      - configs/validation_data.txt


test_dataset:
  type: src.dataset,Dataset
  args:
    data_paths:
      - configs/test_data.txt

